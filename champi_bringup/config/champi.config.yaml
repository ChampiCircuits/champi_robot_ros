
base_controller_simu:
  ros__parameters:
    enable_accel_limits: true

    max_acceleration_linear: 2.0 # m/s^2
    max_deceleration_linear: 2.0 # m/s^2

    max_acceleration_angular: 20.0 # rad/s^2
    max_deceleration_angular: 20.0 # rad/s^2

    imu_vel_yaw_cov: 0.00001



base_controller:
  ros__parameters:

    topic_twist_in: "/cmd_vel"
    champi_can_verbose_mode: false
    timeout_connexion_ros: 1000000000000.0
    timeout_connexion_stm: 1.2

    start_x: 1.825 # m
    start_y: 0.175 # m
    start_theta: 1.57 # rad

    enable_accel_limits: false

    max_acceleration_linear: 0.1 # m/s^2
    max_deceleration_linear: 2.0 # m/s^2

    max_acceleration_angular: 1.0 # rad/s^2
    max_deceleration_angular: 20.0 # rad/s^2

    max_linear_speed: 0.4

    covariances:
      pose: [0.001, 0.001, 0.001, 0.001, 0.001, 0.001]
      velocity: [0.001, 0.001, 0.001, 0.001, 0.001, 0.001]

    base_config:
      max_accel_wheels: 10.0 # rotation des roues en rotation/s²
      wheel_radius: 0.0276 # en m # 0.029
      base_radius: 0.175 # en m
      cmd_vel_timeout: 1.0 # en seconde. Si aucune commande n'est reçue pendant ce temps, le robot s'arrête




imu_controller:
  ros__parameters:
    champi_can_verbose_mode: false
    timeout_connexion_stm: 1.0

    imu_covariances:
      angular_vel: [0.00001, 0.00001, 0.00001]
      linear_acc: [1., 1., 1.]


act_controller:
  ros__parameters:
    champi_can_verbose_mode: false


twist_mux:
  ros__parameters:
    topics:
      navigation:
        topic   : cmd_vel_stop
        timeout : 3.0
        priority: 102
      joystick:
        topic   : cmd_vel_joy
        timeout : 0.5
        priority: 103
      behavior_server:
        topic   : cmd_vel
        timeout : 0.5
        priority: 101

ld_lidar:
  ros__parameters:
    product_name: 'LDLiDAR_LD19'
    topic_name: 'scan'
    frame_id: 'base_laser'
    port_name: '/dev/ttyUSB0'
    port_baudrate: 230400
    laser_scan_dir: true
    enable_angle_crop_func: false
    angle_crop_min: 135.0
    angle_crop_max: 225.0
    range_min: 0.05
    range_max: 5.0
    # units: 'M'


enemy_tracker:
  ros__parameters:
    crop_box:
        x_min: 0.1 # m
        x_max: 1.9 # m
        y_min: 0.1 # m
        y_max: 2.9 # m

costmap_updater:
  ros__parameters:
    grid_width: 2.0 # m
    grid_height: 1.5 # m
    grid_resolution: 0.05 # m/cell
    robot_radius: 0.05 # m # todo juste pour tester #0.2
    enemy_robot_radius: 0.2 # m
    enemy_pos_prediction_time: 0.0 # s. 0.0 means disabled

path_controller:
  ros__parameters:
    control_loop_period: 0.1 # s
    max_linear_acceleration: 0.3 # m/s^2
    max_angular_acceleration: 1.0 # rad/s^2
    # When the ctrl_goal is reached and end_speed!=0 (we expect a new goal to be sent right away),
    # the robot will emergency stop once the timeout is elapsed.
    timeout_wait_next_goal: 0.5 # s.

path_planner:
  ros__parameters:
    planner_loop_period: 0.2
    waypoint_tolerance: 0.03 # m. Waypoint tolerance should be higher because the robot doesn't stop at waypoints thus is less precise